---

lab_domain_name: example.com

unraid:
  homelab_dir: /boot/homelab  # A place where all persistent stuff will be stored
  services_data_dir: /mnt/cache/services  # If you'll use `/mnt/user/`, you might face issues with symlinks, for example: https://gitlab.com/gitlab-org/gitlab-development-kit/-/issues/20
  python_venv_dir: /mnt/cache/system/python
  tls_storage_dir: /mnt/cache/system/tls
  backups:
    rclone:
      remote:
        # SFTP 'rclone_remote' example - https://rclone.org/sftp/
        type: sftp
        host: example.com
        user: johndoe
        port: 22
        key_file: /etc/ssh/ssh_host_rsa_key
        use_insecure_cipher: false
      sync_targets:
        <unique_name>:
          local_path: /local/path/
          remote_path: remote/path/
    rsync:
      ssh_key: /etc/ssh/ssh_host_rsa_key
      ssh_target: johndoe@example.com

docker_config:
  # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_container_module.html
  container_defaults:
    labels:
      ManagedBy: Ansible
    restart_policy: unless-stopped
    # CPU
    cpus: 1.5 # Specify how much of the available CPU resources a container can use.
    # Memory management
    memory: 1G           # The maximum amount of memory the container can use
    kernel_memory: 2G    # https://docs.docker.com/config/containers/resource_constraints/#--kernel-memory-details
    memory_swap: 0       # The amount of memory this container is allowed to swap to disk
    memory_swappiness: 0 # https://docs.docker.com/config/containers/resource_constraints/#--memory-swappiness-details
  default_user: 99:100  # nobody
  container_timezone: UTC
  network:
    external:
      name: br3
      parent: br3
      ipam_config:
        subnet:   # Subnet
        iprange:  # must not overlap with DHCP pool
        gateway:  # Gateway
    internal:
      name: internal
      ipam_config:
        subnet:   # Subnet
        iprange:  # must not overlap with DHCP pool
        gateway:  # Gateway

idrac:
  snmp_uri: hostname_or_ip:161                     # For Telegraf's `inputs.snmp`
  ipmi_uri: user:password@lanplus(hostname_or_ip)  # For Telegraf's `inputs.ipmi_sensor`

services:
  authentik:
    # https://goauthentik.io/docs/installation/configuration
    authentik_secret_key:
    postgres_host: 'postgres.{{ docker_config.network.internal.name }}'
    postgres_port: 5432
    postgres_dbname:
    postgres_user:
    postgres_password:
    ldap:
      insecure: 'true'
      token:
  bookstack:
    mysql_host: 'mysql.{{ docker_config.network.internal.name }}:3306'
    mysql_dbname:
    mysql_user:
    mysql_password:
  diagrams:
    keystore_pass:
    key_pass:
  grafana:
    postgres_host: 'postgres.{{ docker_config.network.internal.name }}:5432'
    postgres_dbname:
    postgres_user:
    postgres_password:
  influxdb:
    url: 'http://<hostname_or_ip>:9091'   # wherever your InfluxDB instance is hosted
    static_external_ip:
  jellyfin:
    static_external_ip:
    media_volumes: []
  #ldap:
  #  static_external_ip:
  loki:
    url: 'http://<hostname_or_ip>:9092/loki/api/v1/push'  # wherever your Loki instance is hosted
  mysql:
    static_external_ip:
  nextcloud:
    data_dir: /mnt/user/appdata/nextcloud/data
    postgres_host: 'postgres.{{ docker_config.network.internal.name }}'
    postgres_port: 5432
    postgres_dbname:
    postgres_user:
    postgres_password:
    postgres_dbtableprefix:
    redis_host: 'redis.{{ docker_config.network.internal.name }}'
    redis_port: 6379
  postgresql:
    root_username: root
    root_password:
    static_external_ip:
  prometheus:
    blackbox:
      uptime_targets: []
    speedtest:
      server: CHANGEME
  reverse_proxy:
    traefik_auth: 'user:password' # for basic auth - https://doc.traefik.io/traefik/v2.0/operations/api/#configuration
    static_external_ip:
  servarr:
    library_volumes: []
    tdarr:
      nodes_count: 1
      nodes_cpuset_cpus:  # Example for machine with 40 cores
        0: [ 18, 19, 38, 39 ]
        1: [ 16, 17, 36, 37 ]
        2: [ 14, 15, 34, 35 ]
        3: [ 12, 13, 32, 33 ]
        4: [ 10, 11, 30, 31 ]
  syslog:
    address: 'udp://<hostname_or_ip>:514'
  telegraf:
    openweathermap:
      api_key: CHANGEME
      cities: []
  wikijs:
    postgres_host: 'postgres.{{ docker_config.network.internal.name }}'
    postgres_port: 5432
    postgres_dbname:
    postgres_user:
    postgres_password:

# apps:
#   # docker_container_aria2
#   aria2:
#     aria2_rpc_secret: loremipsum
#     ariang_auth: username:password
#     volumes: []
#   # docker_container_firefly
#   firefly:
#     # https://docs.firefly-iii.org/firefly-iii/installation/docker/
#     APP_KEY: CHANGEME_32_CHARS
#     DB_DATABASE: CHANGEME
#     DB_USERNAME: CHANGEME
#     DB_PASSWORD: CHANGEME
