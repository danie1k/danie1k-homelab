---

docker:
  container_defaults: # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_container_module.html
    labels:
      ManagedBy: Ansible
    restart_policy: unless-stopped

    # CPU
    cpus: 1.5 # Specify how much of the available CPU resources a container can use.

    # Memory management
    memory: 1G           # The maximum amount of memory the container can use
    kernel_memory: 2G    # https://docs.docker.com/config/containers/resource_constraints/#--kernel-memory-details
    memory_swap: 0       # The amount of memory this container is allowed to swap to disk
    memory_swappiness: 0 # https://docs.docker.com/config/containers/resource_constraints/#--memory-swappiness-details

  external_network_name:
  external_network_parent: # The interface the traffic will physically go through on the Docker host (https://docs.docker.com/network/macvlan/)
  internal_network_name:
  syslog_address: udp://127.0.0.1:514
  volume_base: /mnt/cache/docker # If you'll use `/mnt/user/`, you might face issues with symlinks, for example: https://gitlab.com/gitlab-org/gitlab-development-kit/-/issues/20

apps:
  # docker_container_aria2
  aria2:
    aria2_rpc_secret: loremipsum
    ariang_auth: username:password
    volumes: []
  # docker_container_firefly
  firefly:
    # https://docs.firefly-iii.org/firefly-iii/installation/docker/
    APP_KEY: CHANGEME_32_CHARS
    DB_DATABASE: CHANGEME
    DB_USERNAME: CHANGEME
    DB_PASSWORD: CHANGEME
  # docker_container_prometheus
  prometheus:
    blackbox:
      targets: []
    speedtest:
      server: CHANGEME
  telegraf:
    openweathermap:
      api_key: CHANGEME
      cities: []

unraid_backups:
  rclone_remote:
    # SFTP 'rclone_remote' example - https://rclone.org/sftp/
    type: sftp
    host: example.com
    user: johndoe
    port: 22
    key_file: /etc/ssh/ssh_host_rsa_key
    use_insecure_cipher: false
  rsync:
    ssh_key: /etc/ssh/ssh_host_rsa_key
    ssh_target: johndoe@example.com
  sync_targets:
    unique_name:
      local_path: /local/path/
      remote_path: remote/path/

lab:
  domain_name: example.com

  idrac:
    snmp_uri: domain_or_ip:161                     # For Telegraf's `inputs.snmp`
    ipmi_uri: user:password@lanplus(domain_or_ip)  # For Telegraf's `inputs.ipmi_sensor`

  services:
    influxdb_url: 'http://influxdb.<domain_name>:9091'           # `docker_container_influxdb`
    loki_url: 'http://loki.<domain_name>:9092/loki/api/v1/push'  # wherever your Loki is hosted

  ldap:
    baseDN: dc=example,dc=com
    groups:
      - name: root
        unixid: 1
    users:
      - name: root
        unixid: 1
        primarygroup: 1
        passsha256: "4813494d137e1631bba301d5acab6e7bb7aa74ce1185d456565ef51d737677b2" # echo -n 'root' | openssl dgst -sha256

  tls_storage_dir: /mnt/cache/system/tls
  traefik_auth: user:password # for basic auth - https://doc.traefik.io/traefik/v2.0/operations/api/#configuration

unraid:
  homelab_dir: /boot/homelab # A place where all persistent stuff will be stored
  python_venv_dir: /mnt/cache/system/python
