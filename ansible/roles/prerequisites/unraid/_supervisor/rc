#!/bin/sh
# /etc/rc.d/rc.supervisord
#
# AUTHOR: Josh Jaques <jjaques@gmail.com>
# https://github.com/Supervisor/initscripts/blob/master/slackware
#
# Start/stop/restart supervisor in slackware.
# Specfically tested in v13.37
#
# To make Supervisor start automatically at boot, make this
# file executable:  chmod 755 /etc/rc.d/rc.supervisord

# Time to wait between stop/start on a restart
SHUTDOWN_TIME=5

# Time to wait after a start before reporting success/fail
STARTUP_TIME=2

# Location of the pid file
PIDFILE=/var/run/supervisord.pid

# Config of supervisor
CONFIG='{{ unraid.homelab_dir }}/supervisord/supervisord.conf'

# Daemon to start
DAEMON='{{ unraid.python_venv_dir }}/bin/supervisord'

supervisord_start() {
    $DAEMON -c $CONFIG -j $PIDFILE
}

supervisord_status() {
    if [ -f $PIDFILE ]
    then
        pgrep -f $DAEMON | grep -f $PIDFILE > /dev/null 2>/dev/null
        if [ $? -eq 0 ]
        then
            return 0
        else
            return 1
        fi
    else
        return 1
    fi
}

supervisord_stop() {
    # http://supervisord.org/running.html#signals
    kill -s 15 $(cat $PIDFILE)
}

case "$1" in
    'start')
        echo -n "Starting..."
        supervisord_start
        sleep $STARTUP_TIME
        supervisord_status && echo "DONE [PID: $(cat $PIDFILE)]" || echo "ERROR"
        ;;
    'status')
        supervisord_status && echo "RUNNING [PID: $(cat $PIDFILE)]" || echo "STOPPED"
        ;;
    'stop')
        supervisord_status && {
          supervisord_stop
          sleep $SHUTDOWN_TIME
          supervisord_status && echo "Failed" || echo "Success"
        } || {
          echo "Not Running..."
          exit 1
        }
        ;;
    'restart')
        supervisord_status && {
          supervisord_stop
          sleep $SHUTDOWN_TIME
          supervisord_status && {
            echo "Failed"
            exit 1
          } || echo "Success"
        } || {
          echo "Not Running..."
          exit 1
        }
        supervisord_start
        sleep $STARTUP_TIME
        supervisord_status && echo "DONE [PID: $(cat $PIDFILE)]" || echo "ERROR"
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        ;;
esac

