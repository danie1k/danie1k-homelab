---

# Remember to manually create InfluxDB database first!
# >>> CREATE DATABASE telegraf;
# >>> CREATE RETENTION POLICY one_month ON telegraf DURATION 4w REPLICATION 1 DEFAULT;

- name: Create persistent storage directory on the Flash drive
  ansible.builtin.file:
    path: '{{ unraid.homelab_dir }}/telegraf'
    state: directory

# Telegraf binary

- name: Get latest release version number
  ansible.builtin.shell:
    cmd: 'curl -s https://api.github.com/repos/influxdata/telegraf/releases/latest | jq -r .tag_name | cut -c2-'
    warn: false
  register: _latest_telegraf_release
  changed_when: false

- name: Download latest binarary & unzip to temporary directory
  ansible.builtin.unarchive:
    src: 'https://dl.influxdata.com/telegraf/releases/telegraf-{{ _latest_telegraf_release.stdout }}_linux_amd64.tar.gz'
    remote_src: yes
    dest:  /tmp
    creates: '{{ unraid.homelab_dir }}/telegraf/telegraf'
  register: _telegraf_download

- name: Copy Telegraf binary to persistent storage
  ansible.builtin.copy:
    src: '/tmp/telegraf-{{ _latest_telegraf_release.stdout }}/usr/bin/telegraf'
    remote_src: true
    dest: '{{ unraid.homelab_dir }}/telegraf/telegraf'
  when: _telegraf_download.changed

- name: Remove temporary files
  ansible.builtin.file:
    path: '/tmp/telegraf-{{ _latest_telegraf_release.stdout }}'
    state: absent
  when: _telegraf_download.changed

# Config files

- name: Copy Supervisord config to persistent storage
  ansible.builtin.template:
    src: supervisord.conf
    dest: '{{ unraid.homelab_dir }}/supervisord/supervisor.d/telegraf.conf'
    force: true

- name: Copy Telegraf config files to persistent storage
  ansible.builtin.copy:
    src: '{{ item }}'
    dest: '{{ unraid.homelab_dir }}/telegraf/{{ item }}'
    force: true
  with_list:
    - telegraf-idrac.conf
    - telegraf-server-hardware.conf

# Scripts

- name: Set up boot script
  ansible.builtin.blockinfile:
    content: '{{ lookup("template", role_path ~ "/other/boot.sh") }}'
    dest: '{{ unraid.homelab_dir }}/boot.sh'
    marker: "# {mark} ANSIBLE_TELEGRAF"

- name: Install User Script
  include_tasks: '{{ playbook_dir }}/dry/unraid/user-script.yml'
  vars:
    name: telegraf_update
    description: Update Telegraf
    script: '{{ lookup("template", role_path ~ "/other/update.sh") }}'
