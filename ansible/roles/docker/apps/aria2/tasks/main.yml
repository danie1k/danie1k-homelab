---

- set_fact:  # noqa 502
    _name: aria2
    _port:
      aria2_rpc: '6800'
      ariang_http: '8080'
    _volumes:
      - [ '/config', '/config', 'rw' ]
      - [ '/80-patch-configure-aria2.sh', '/etc/cont-init.d/80-patch-configure-aria2.sh' ]

# unraid/secrets: https://github.com/danie1k/docker-aria2-ariang#environment-variables=

- include_tasks: '{{ playbook_dir }}/dry/docker/unraid-container.yml'
  vars:
    name: '{{ _name }}'
    image: danie1k/aria2-ariang:rolling
    include_secrets: true
    env:
      ARIA2_ARIANG_PORT: '{{ _port.ariang_http }}'
      ARIA2_ListenPort: '{{ _port.aria2_rpc }}'
      ARIA2_LogLevel: warn
    networks:
      - name: '{{ docker_config.network.external.name }}'
        ipv4_address: '{{ services.aria2.static_ip }}'
      - name: '{{ docker_config.network.internal.name }}'
    volumes: '{{ _volumes|list + services.aria2.volumes|list }}'

    files:
      - src: 80-patch-configure-aria2.sh
        dest: ''

    proxy:
      - http_port: '{{ _port.ariang_http }}'

    labels:
      # Aria2 RPC Address: https://<_name>.<lab_domain_name>/jsonrpc
      traefik.http.routers.aria2-eighteight.rule: "Host(`{{ _name }}.{{ lab_domain_name }}`) && Path(`/jsonrpc`)"
      traefik.http.routers.aria2-eighteight.service: "{{ _name }}-rpc@docker"
      traefik.http.services.aria2-rpc.loadbalancer.server.port: "{{ _port.aria2_rpc }}"
